{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naprake\\\\Desktop\\\\Frontend\\\\notes\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNoteText, setNewNoteText] = useState('');\n  const addNote = () => {\n    if (newNoteText.trim()) {\n      const newNote = {\n        id: Date.now(),\n        text: newNoteText,\n        completed: false\n      };\n      setNotes([...notes, newNote]);\n      setNewNoteText('');\n    }\n  };\n  const toggleNoteCompletion = id => {\n    setNotes(notes.map(note => {\n      if (note.id === id) {\n        return {\n          ...note,\n          completed: !note.completed\n        };\n      }\n      return note;\n    }));\n  };\n  const deleteNote = id => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notes-list\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"note-checkbox\",\n          checked: note.completed,\n          onChange: () => toggleNoteCompletion(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note-text\",\n          children: note.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newNoteText,\n        onChange: e => setNewNoteText(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNote,\n        children: \"Add new note \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9sRzN1EcNP2kjZDmLQE51mNCxdk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","notes","setNotes","newNoteText","setNewNoteText","addNote","trim","newNote","id","Date","now","text","completed","toggleNoteCompletion","map","note","deleteNote","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","checked","onChange","onClick","value","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Naprake/Desktop/Frontend/notes/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Import your CSS file\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNoteText, setNewNoteText] = useState('');\n\n  const addNote = () => {\n    if (newNoteText.trim()) {\n      const newNote = {\n        id: Date.now(),\n        text: newNoteText,\n        completed: false,\n      };\n\n      setNotes([...notes, newNote]);\n      setNewNoteText('');\n    }\n  };\n\n  const toggleNoteCompletion = (id) => {\n    setNotes(\n      notes.map((note) => {\n        if (note.id === id) {\n          return { ...note, completed: !note.completed };\n        }\n        return note;\n      })\n    );\n  };\n\n  const deleteNote = (id) => {\n    setNotes(notes.filter((note) => note.id !== id));\n  };\n\n  return (\n    <>\n      <h1>Заметки</h1>\n      <ul className=\"notes-list\">\n        {notes.map((note) => (\n          <li key={note.id} className=\"note\">\n            <input\n              type=\"checkbox\"\n              className=\"note-checkbox\"\n              checked={note.completed}\n              onChange={() => toggleNoteCompletion(note.id)}\n            />\n            <span className=\"note-text\">{note.text}</span>\n            <button onClick={() => deleteNote(note.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n      <form className=\"add-note-form\">\n        <textarea\n          value={newNoteText}\n          onChange={(e) => setNewNoteText(e.target.value)}\n          placeholder=\"Введите текст заметки\"\n        />\n        <button onClick={addNote}>Add new note </button>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}